{"version":3,"file":"code-section-BKJxoo4G.js","sources":["../../src/components/CreateCourse/CreateCodeProblem/code-section.jsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Label } from '@/components/ui/label'\r\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Textarea } from '@/components/ui/textarea'\r\nimport { Badge } from '@/components/ui/badge'\r\nimport { Plus, X } from 'lucide-react'\r\nimport { Switch } from '@/components/ui/switch'\r\n\r\nconst TestCaseGenerator = ({ testCases, setTestCases }) => {\r\n  const [params, setParams] = useState([])\r\n  const [newParam, setNewParam] = useState('')\r\n  const [previewInput, setPreviewInput] = useState('')\r\n  const [previewOutput, setPreviewOutput] = useState('')\r\n\r\n  const addParam = () => {\r\n    if (newParam && !params.includes(newParam)) {\r\n      setParams([...params, newParam])\r\n      setNewParam('')\r\n    }\r\n  }\r\n\r\n  const removeParam = (param) => {\r\n    setParams(params.filter((p) => p !== param))\r\n    setTestCases(\r\n      testCases.map((testCase) => {\r\n        const { [param]: removed, ...rest } = testCase\r\n        return rest\r\n      })\r\n    )\r\n  }\r\n\r\n  const createTestCase = () => {\r\n    const newTestCase = params.reduce((acc, param) => {\r\n      acc[param] = ''\r\n      return acc\r\n    }, {})\r\n    setTestCases([...testCases, { ...newTestCase, expectedOutput: 'N/A', isHidden: false }])\r\n  }\r\n\r\n  const updateTestCaseValue = (testCaseIndex, param, value) => {\r\n    const updatedTestCases = [...testCases]\r\n    updatedTestCases[testCaseIndex][param] = value\r\n    setTestCases(updatedTestCases)\r\n  }\r\n\r\n  const updateExpectedOutput = (testCaseIndex, value) => {\r\n    const updatedTestCases = [...testCases]\r\n    updatedTestCases[testCaseIndex].expectedOutput = value\r\n    setTestCases(updatedTestCases)\r\n  }\r\n\r\n  const removeTestCase = (index) => {\r\n    setTestCases(testCases.filter((_, i) => i !== index))\r\n  }\r\n\r\n  const toggleTestCaseHidden = (index) => {\r\n    const updatedTestCases = [...testCases]\r\n    updatedTestCases[index].isHidden = !updatedTestCases[index].isHidden\r\n    setTestCases(updatedTestCases)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Update Preview Input\r\n    const input = testCases.flatMap((testCase) => params.map((param) => `${testCase[param]}`)).join('\\n')\r\n    setPreviewInput(input)\r\n\r\n    // Update Preview Output\r\n    const output = JSON.stringify(\r\n      testCases.map((testCase) => ({\r\n        Output: testCase.expectedOutput,\r\n        Stdout: ''\r\n      })),\r\n      null,\r\n      2\r\n    )\r\n    setPreviewOutput(output)\r\n  }, [testCases, params])\r\n\r\n  const createTestCaseNoParam = () => {\r\n    setTestCases([...testCases, { expectedOutput: '', isHidden: false }])\r\n  }\r\n\r\n  return (\r\n    <Card className='w-full mx-auto'>\r\n      <div className='flex justify-center'>\r\n        <CardHeader>\r\n          <CardTitle className='text-center text-2xl font-semibold'>Test Case Generator</CardTitle>\r\n        </CardHeader>\r\n      </div>\r\n      <CardFooter className='flex flex-col items-stretch gap-4'>\r\n        <div className='grid grid-cols-3 gap-4'>\r\n          <div\r\n            className={`col-span-2 grid  ${testCases.length === 0 ? 'rounded-xl border-2 border-dashed border-gray-300 flex items-center justify-center' : 'grid-cols-2 gap-4'}`}\r\n          >\r\n            {testCases.length === 0 && (\r\n              <p className='text-center text-gray-500 w-full font-semibold'>No test cases created yet.</p>\r\n            )}\r\n            {testCases.map((testCase, testCaseIndex) => (\r\n              <Card key={testCaseIndex} className='w-full mb-4'>\r\n                <CardHeader className='flex flex-row items-center justify-between space-y-0 pb-2'>\r\n                  <CardTitle className='text-sm font-semibold'>Test Case {testCaseIndex + 1}</CardTitle>\r\n                  <div className='flex items-center space-x-2'>\r\n                    <div className='flex items-center space-x-2'>\r\n                      <Label htmlFor={`hidden-toggle-${testCaseIndex}`}>Hidden</Label>\r\n                      <Switch\r\n                        id={`hidden-toggle-${testCaseIndex}`}\r\n                        checked={testCase.isHidden}\r\n                        onCheckedChange={() => toggleTestCaseHidden(testCaseIndex)}\r\n                      />\r\n                    </div>\r\n                    <Button variant='ghost' size='sm' onClick={() => removeTestCase(testCaseIndex)}>\r\n                      <X className='h-4 w-4' />\r\n                    </Button>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  {Object.entries(testCase).map(\r\n                    ([param, value]) =>\r\n                      param !== 'expectedOutput' &&\r\n                      param !== 'isHidden' && (\r\n                        <div key={param} className='flex items-center gap-2 mb-2'>\r\n                          <Label htmlFor={`${testCaseIndex}-${param}`} className='w-1/3'>\r\n                            <Badge variant='outline' className='mr-2'>\r\n                              {param}\r\n                            </Badge>\r\n                          </Label>\r\n                          <Input\r\n                            id={`${testCaseIndex}-${param}`}\r\n                            value={value}\r\n                            onChange={(e) => updateTestCaseValue(testCaseIndex, param, e.target.value)}\r\n                            className='w-2/3'\r\n                          />\r\n                        </div>\r\n                      )\r\n                  )}\r\n                  <div className='flex items-center gap-2 mb-2'>\r\n                    <Label htmlFor={`${testCaseIndex}-expectedOutput`} className='w-1/3'>\r\n                      <Badge variant='outline' className='mr-2'>\r\n                        Expected Output\r\n                      </Badge>\r\n                    </Label>\r\n                    <Input\r\n                      id={`${testCaseIndex}-expectedOutput`}\r\n                      value={testCase.expectedOutput}\r\n                      onChange={(e) => updateExpectedOutput(testCaseIndex, e.target.value)}\r\n                      className='w-2/3'\r\n                    />\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <Card className='w-full mb-4'>\r\n              <CardContent className='space-y-4'>\r\n                <div className='flex gap-2 mt-4'>\r\n                  <Input\r\n                    placeholder='Enter parameter name'\r\n                    value={newParam}\r\n                    onChange={(e) => setNewParam(e.target.value)}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter') {\r\n                        e.preventDefault()\r\n                        addParam()\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Button type='button' onClick={addParam} className='flex-shrink-0'>\r\n                    <Plus className='w-4 h-4 mr-2' />\r\n                    Add Param\r\n                  </Button>\r\n                </div>\r\n                <div className='flex flex-wrap gap-2'>\r\n                  {params.map((param) => (\r\n                    <div key={param} className='flex items-center bg-gray-100 rounded-full px-3 py-1'>\r\n                      <span>{param}</span>\r\n                      <Button variant='ghost' size='sm' className='ml-2 p-0 h-auto' onClick={() => removeParam(param)}>\r\n                        <X className='w-4 h-4' />\r\n                      </Button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n              <CardFooter>\r\n                <Button type='button' onClick={createTestCase} disabled={params.length === 0} className='w-fit'>\r\n                  Create Test Case\r\n                </Button>\r\n                <Button type='button' onClick={createTestCaseNoParam} className='w-fit ml-2'>\r\n                  Create No Parameters\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n            <Card className='w-full mb-4'>\r\n              <CardHeader>\r\n                <CardTitle>Preview Input</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Textarea value={previewInput} readOnly className='w-full h-40' />\r\n              </CardContent>\r\n            </Card>\r\n            <Card className='w-full'>\r\n              <CardHeader>\r\n                <CardTitle>Preview Output</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Textarea value={previewOutput} readOnly className='w-full h-40' />\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default React.memo(TestCaseGenerator)\r\n"],"names":["TestCaseGenerator","testCases","setTestCases","params","setParams","useState","newParam","setNewParam","previewInput","setPreviewInput","previewOutput","setPreviewOutput","addParam","removeParam","param","p","testCase","removed","rest","createTestCase","newTestCase","acc","updateTestCaseValue","testCaseIndex","value","updatedTestCases","updateExpectedOutput","removeTestCase","index","_","i","toggleTestCaseHidden","useEffect","input","output","createTestCaseNoParam","jsxs","Card","jsx","CardHeader","CardTitle","CardFooter","Label","Switch","Button","X","CardContent","Badge","Input","e","Plus","Textarea","TestCaseGenerator$1","React"],"mappings":"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"}