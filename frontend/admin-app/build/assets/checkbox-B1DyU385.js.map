{"version":3,"file":"checkbox-B1DyU385.js","sources":["../../node_modules/@radix-ui/react-checkbox/dist/index.mjs","../../src/components/ui/checkbox.jsx"],"sourcesContent":["\"use client\";\n\n// packages/react/checkbox/src/Checkbox.tsx\nimport * as React from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar CHECKBOX_NAME = \"Checkbox\";\nvar [createCheckboxContext, createCheckboxScope] = createContextScope(CHECKBOX_NAME);\nvar [CheckboxProvider, useCheckboxContext] = createCheckboxContext(CHECKBOX_NAME);\nvar Checkbox = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCheckbox,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...checkboxProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked = false, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked,\n      onChange: onCheckedChange\n    });\n    const initialCheckedStateRef = React.useRef(checked);\n    React.useEffect(() => {\n      const form2 = button?.form;\n      if (form2) {\n        const reset = () => setChecked(initialCheckedStateRef.current);\n        form2.addEventListener(\"reset\", reset);\n        return () => form2.removeEventListener(\"reset\", reset);\n      }\n    }, [button, setChecked]);\n    return /* @__PURE__ */ jsxs(CheckboxProvider, { scope: __scopeCheckbox, state: checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"checkbox\",\n          \"aria-checked\": isIndeterminate(checked) ? \"mixed\" : checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...checkboxProps,\n          ref: composedRefs,\n          onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === \"Enter\") event.preventDefault();\n          }),\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => isIndeterminate(prevChecked) ? true : !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        BubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" },\n          defaultChecked: isIndeterminate(defaultChecked) ? false : defaultChecked\n        }\n      )\n    ] });\n  }\n);\nCheckbox.displayName = CHECKBOX_NAME;\nvar INDICATOR_NAME = \"CheckboxIndicator\";\nvar CheckboxIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCheckbox, forceMount, ...indicatorProps } = props;\n    const context = useCheckboxContext(INDICATOR_NAME, __scopeCheckbox);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isIndeterminate(context.state) || context.state === true, children: /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.state),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...indicatorProps,\n        ref: forwardedRef,\n        style: { pointerEvents: \"none\", ...props.style }\n      }\n    ) });\n  }\n);\nCheckboxIndicator.displayName = INDICATOR_NAME;\nvar BubbleInput = (props) => {\n  const { control, checked, bubbles = true, defaultChecked, ...inputProps } = props;\n  const ref = React.useRef(null);\n  const prevChecked = usePrevious(checked);\n  const controlSize = useSize(control);\n  React.useEffect(() => {\n    const input = ref.current;\n    const inputProto = window.HTMLInputElement.prototype;\n    const descriptor = Object.getOwnPropertyDescriptor(inputProto, \"checked\");\n    const setChecked = descriptor.set;\n    if (prevChecked !== checked && setChecked) {\n      const event = new Event(\"click\", { bubbles });\n      input.indeterminate = isIndeterminate(checked);\n      setChecked.call(input, isIndeterminate(checked) ? false : checked);\n      input.dispatchEvent(event);\n    }\n  }, [prevChecked, checked, bubbles]);\n  const defaultCheckedRef = React.useRef(isIndeterminate(checked) ? false : checked);\n  return /* @__PURE__ */ jsx(\n    \"input\",\n    {\n      type: \"checkbox\",\n      \"aria-hidden\": true,\n      defaultChecked: defaultChecked ?? defaultCheckedRef.current,\n      ...inputProps,\n      tabIndex: -1,\n      ref,\n      style: {\n        ...props.style,\n        ...controlSize,\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        opacity: 0,\n        margin: 0\n      }\n    }\n  );\n};\nfunction isIndeterminate(checked) {\n  return checked === \"indeterminate\";\n}\nfunction getState(checked) {\n  return isIndeterminate(checked) ? \"indeterminate\" : checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Checkbox;\nvar Indicator = CheckboxIndicator;\nexport {\n  Checkbox,\n  CheckboxIndicator,\n  Indicator,\n  Root,\n  createCheckboxScope\n};\n//# sourceMappingURL=index.mjs.map\n","/* eslint-disable react/prop-types */\r\nimport * as React from 'react'\r\nimport * as CheckboxPrimitive from '@radix-ui/react-checkbox'\r\nimport { CheckIcon } from '@radix-ui/react-icons'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst Checkbox = React.forwardRef(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      'peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator className={cn('flex items-center justify-center text-current')}>\r\n      <CheckIcon className='w-4 h-4' />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\nexport { Checkbox }\r\n"],"names":["CHECKBOX_NAME","createCheckboxContext","createCheckboxScope","createContextScope","CheckboxProvider","useCheckboxContext","Checkbox","React.forwardRef","props","forwardedRef","__scopeCheckbox","name","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","form","checkboxProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","checked","setChecked","useControllableState","initialCheckedStateRef","React.useEffect","form2","reset","jsxs","jsx","Primitive","isIndeterminate","getState","composeEventHandlers","event","prevChecked","BubbleInput","INDICATOR_NAME","CheckboxIndicator","forceMount","indicatorProps","context","Presence","control","bubbles","inputProps","ref","usePrevious","controlSize","useSize","input","inputProto","defaultCheckedRef","Root","Indicator","className","CheckboxPrimitive.Root","cn","CheckboxPrimitive.Indicator","CheckIcon"],"mappings":"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","x_google_ignoreList":[0]}