@using Microsoft.AspNetCore.Identity

@inject SignInManager<Users> signInManager
@inject UserManager<Users> userManager

@{
    Users currentUser = null;

    if (signInManager.IsSignedIn(User))
    {
        // Lấy thông tin người dùng hiện tại
        currentUser = await userManager.GetUserAsync(User);
    }
}

@if (TempData["SuccessMessageProfile"] != null)
{
    <div id="toast-success" class="toast toast-success">
        @TempData["SuccessMessageProfile"]
    </div>
}

@if (TempData["ErrorMessageProfile"] != null)
{
    <div id="toast-error" class="toast toast-error">
        @TempData["ErrorMessageProfile"]
    </div>
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Personal Information Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
        }

        .container-fluid {
            padding: 0; /* Xóa khoảng cách xung quanh container */
        }

        .content {
            text-align: center;
            padding: 30px;
            margin-left: 250px; /* Để nội dung không bị đè lên sidebar khi mở */
            margin-top: 60px; /* Thêm khoảng cách tương đương chiều cao của header */
            transition: margin-left 0.3s ease; /* Hiệu ứng chuyển động mượt mà */
            width: calc(100% - 250px); /* Đảm bảo nội dung chiếm 100% khi sidebar mở */
        }

            .content.collapsed {
                margin-left: 80px; /* Khi sidebar thu gọn */
                width: calc(100% - 80px); /* Đảm bảo nội dung chiếm 100% khi sidebar thu gọn */
            }

        .sidebar {
            width: 250px;
            min-height: 100vh;
            background-color: #f8f9fa;
            border-right: 1px solid #dee2e6;
            transition: width 0.3s ease; /* Hiệu ứng mở rộng và thu gọn sidebar */
            position: fixed; /* Đảm bảo sidebar luôn sát lề trái */
            left: 0;
            top: 60px; /* Điều chỉnh chiều cao top dựa trên chiều cao của navbar */
            z-index: 900;
        }

            .sidebar.collapsed {
                width: 80px; /* Khi sidebar thu gọn */
            }

            .sidebar .nav-link {
                font-weight: normal; /* Sửa font-weight về bình thường */
                font-size: 15px;
                color: #333;
                display: flex;
                align-items: center;
                cursor: pointer;
                transition: background-color 0.3s, color 0.3s;
                position: relative;
            }

            .sidebar.collapsed .nav-link {
                justify-content: center; /* Icon được căn giữa khi thanh bên thu gọn */
            }

            .sidebar .nav-link i {
                color: #6c757d; /* Đặt màu xám cho biểu tượng */
            }

            .sidebar .nav-link span {
                margin-left: 10px;
            }

            .sidebar.collapsed .nav-link span,
            .sidebar.collapsed .nav-link .toggle-arrow {
                display: none; /* Ẩn văn bản và mũi tên khi thu gọn */
            }

            .sidebar .nav-link:hover {
                background-color: #e9ecef;
                color: #007bff; /* Màu xanh dương khi hover */
            }

            .sidebar .nav-item .nav-link.active,
            .sidebar .nav-link.active {
                background-color: #e7f1ff; /* Màu xanh dương nhạt khi mục được chọn */
                color: #007bff;
            }

            .sidebar .collapse.show {
                background-color: #f1f3f5;
            }

            .sidebar .icon {
                margin-right: 10px;
            }

            /* Căn chỉnh mục con luôn thụt vào */
            .sidebar .nav-link.toggle-btn {
                padding-left: 40px; /* Luôn thụt lề cho các mục con */
            }

        .toggle-arrow {
            margin-left: auto;
            transition: transform 0.3s;
        }

            .toggle-arrow.rotate {
                transform: rotate(90deg);
            }

        .user-header {
            margin-bottom: 30px;
        }

            .user-header h2 {
                margin: 0;
                font-size: 28px;
            }

        /* Popup menu */
        .popup-menu {
            display: none;
            position: absolute;
            left: calc(100% + 10px); /* Hiển thị ngay bên phải phần tử cha */
            background-color: #fff;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            padding: 10px 0;
            width: 200px;
            z-index: 10;
            border-radius: 4px;
        }

            .popup-menu a {
                padding: 10px;
                font-size: 14px;
                display: block;
                color: #333;
                text-decoration: none;
                transition: background-color 0.3s, color 0.3s;
            }

                .popup-menu a:hover {
                    background-color: #e9ecef;
                    color: #007bff; /* Màu xanh dương khi hover */
                }

        /* Đảm bảo chữ trong header không bị in đậm và căn lề cho hợp lý */
        .navbar {
            display: flex;
            justify-content: space-between; /* Căn đều hai bên */
            align-items: center; /* Căn giữa theo chiều dọc */
            background-color: #f8f9fa; /* Màu nền navbar */
            padding-right: 20px; /* Tạo khoảng cách giữa nội dung và hai mép của navbar */
            padding-left: 20px; /* Thêm khoảng cách bên trái để chữ không dính vào lề */
        }

            .navbar .navbar-brand {
                font-weight: normal; /* Đặt lại kiểu chữ mặc định */
                font-size: 1.25rem; /* Đặt kích thước chữ phù hợp */
            }

            .navbar .nav-link {
                font-weight: normal; /* Đặt lại kiểu chữ mặc định */
                font-size: 1rem; /* Thiết lập kích thước chữ cho các link */
            }

        .custom-paragraph {
            margin-top: 10px; /* Khoảng cách phía trên */
            margin-bottom: 10px; /* Khoảng cách phía dưới */
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr); /* 3 cột */
            gap: 20px;
            justify-items: center;
            margin-top: 30px;
        }

        .grid-item {
            background-color: #e9ecef;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
            width: 250px;
            height: 150px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

            .grid-item img {
                margin-bottom: 10px;
            }

            .grid-item p {
                font-size: 16px;
                font-weight: 500;
                color: #333;
            }

        @@media (max-width: 768px) {
            .grid-container {
                grid-template-columns: repeat(2, 1fr); /* 2 cột trên màn hình nhỏ */
            }
        }

        @@media (max-width: 576px) {
            .grid-container {
                grid-template-columns: 1fr; /* 1 cột trên màn hình nhỏ hơn */
            }
        }

        a.no-underline {
            text-decoration: none !important; /* Bắt buộc không có gạch chân */
        }

        /* Toast cho thông báo thành công */
        .toast-success {
            background-color: #dff0d8; /* Màu xanh nhạt cho thành công */
            color: #3c763d; /* Màu xanh đậm cho chữ */
            border: 1px solid #d6e9c6; /* Viền phù hợp với màu nền */
        }

        /* Toast cho thông báo thất bại */
        .toast-error {
            background-color: #f8d7da; /* Màu đỏ nhạt cho lỗi */
            color: #721c24; /* Màu đỏ đậm cho chữ */
            border: 1px solid #f5c6cb; /* Viền đỏ nhạt */
        }

        /* Toast chung */
        .toast {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px;
            border-radius: 5px;
            z-index: 1000;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            display: none;
            transition: opacity 1s ease;
            font-family: Arial, sans-serif;
            font-size: 14px;
            margin-top: 50px;
        }

            .toast.show {
                display: block;
                opacity: 1;
            }
    </style>
</head>
<body>
    <div class="container-fluid d-flex">
        <div class="sidebar p-3" id="sidebar">
            <nav class="nav flex-column">
                <!-- Phần Trang Chủ -->
                <a class="nav-link" asp-controller="Profile" asp-action="Index">
                    <i class="fas fa-home icon"></i>
                    <span>Home</span>
                </a>

                <!-- Phần Thông Tin Của Tôi -->
                <a class="nav-link" id="toggleMyInfo" href="javascript:void(0)" >
                    <i class="fas fa-address-card icon"></i>
                    <span>My Information</span>
                    <i class="fas fa-chevron-right toggle-arrow" id="arrowMyInfo"></i>
                </a>
                <div class="collapse" id="myInfo">
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="Personal">
                        <i class="fas fa-user icon"></i>
                        <span>Personal Information</span>
                    </a>
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="Contact">
                        <i class="fas fa-id-badge icon"></i>
                        <span>Contact Information</span>
                    </a>
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="Emails">
                        <i class="fas fa-envelope icon"></i>
                        <span>Emails</span>
                    </a>
                </div>

                <!-- Pop-up khi thanh bên thu gọn -->
                <div class="popup-menu" id="popupMyInfo">
                    <a asp-controller="Profile" asp-action="Personal">
                        <i class="fas fa-user icon"></i>Personal Information
                    </a>
                    <a asp-controller="Profile" asp-action="Contact">
                        <i class="fas fa-id-badge icon"></i>Contact Information
                    </a>
                    <a asp-controller="Profile" asp-action="Emails">
                        <i class="fas fa-envelope icon"></i>Emails
                    </a>
                </div>

                <!-- Phần Bảo Mật -->
                <a class="nav-link" id="toggleSecurity" href="javascript:void(0)">
                    <i class="fas fa-shield-alt icon"></i>
                    <span>Security</span>
                    <i class="fas fa-chevron-right toggle-arrow" id="arrowSecurity"></i>
                </a>
                <div class="collapse" id="security">
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="ChangePassword">
                        <i class="fas fa-key icon"></i>
                        <span>Password</span>
                    </a>
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="TwoFactorAuthManager">
                        <i class="fas fa-mobile-alt icon"></i>
                        <span>Two-Factor Authentication</span>
                    </a>
                    <a class="nav-link toggle-btn" href="#!">
                        <i class="fas fa-link icon"></i>
                        <span>Linked Accounts</span>
                    </a>
                </div>

                <!-- Pop-up khi thanh bên thu gọn -->
                <div class="popup-menu" id="popupSecurity">
                    <a asp-controller="Profile" asp-action="ChangePassword">
                        <i class="fas fa-key icon"></i> Password
                    </a>
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="TwoFactorAuthManager">
                        <i class="fas fa-mobile-alt icon"></i> Two-Factor Authentication
                    </a>
                    <a href="#!">
                        <i class="fas fa-link icon"></i> Linked Accounts
                    </a>
                </div>

                <!-- Phần Cài Đặt Nhà Phát Triển -->
                <a class="nav-link" id="toggleDeveloperSettings" href="javascript:void(0)">
                    <i class="fas fa-cogs icon"></i>
                    <span>Developer Settings</span>
                    <i class="fas fa-chevron-right toggle-arrow" id="arrowDeveloperSettings"></i>
                </a>
                <div class="collapse" id="developerSettings">
                    <a class="nav-link toggle-btn" href="#!">
                        <i class="fas fa-code icon"></i>
                        <span>OAuth Applications</span>
                    </a>
                    <a class="nav-link toggle-btn" href="#!">
                        <i class="fas fa-key icon"></i>
                        <span>Access security code</span>
                    </a>
                    <a class="nav-link toggle-btn" href="#!">
                        <i class="fas fa-user-shield icon"></i>
                        <span>Authorized OAuth Applications</span>
                    </a>
                </div>

                <!-- Pop-up khi thanh bên thu gọn -->
                <div class="popup-menu" id="popupDeveloperSettings">
                    <a href="#!">
                        <i class="fas fa-code icon"></i>OAuth Applications
                    </a>
                    <a href="#!">
                        <i class="fas fa-key icon"></i>Access security code
                    </a>
                    <a href="#!">
                        <i class="fas fa-user-shield icon"></i>Authorized OAuth Applications
                    </a>
                </div>

                <div>
                    <a class="nav-link" id="toggleSidebar" href="javascript:void(0)">
                        <i class="fas fa-angle-double-left icon"></i>
                        <span id="sidebarToggleText">Collapse sidebar</span>
                    </a>
                </div>

            </nav>

        </div>

        <div class="content" id="content">
            <div class="user-header">
                @if (currentUser != null)
                {
                    <img id="avatarPreview" src="" alt="User Avatar" class="rounded-circle" style="width: 100px; height: 100px; object-fit: cover; border: 3px solid #ddd;">
                    <h2>Welcome, @currentUser.FirstName @currentUser.LastName</h2>
                }
                <p class="custom-paragraph">Manage your personal information and security with ICoder Accounts</p>
            </div>

            <!-- Grid content -->
            <div class="grid-container">
                <a asp-controller="Profile" asp-action="Personal" class="no-underline">
                    <div class="grid-item">
                        <img src="https://sin1.contabostorage.com/9414348a03c9471cb842d448f65ca5fb:icoder/backend/imageidentity/personalinformation.png" alt="Personal Information" style="width:60px;height:60px;">
                        <p>Personal Information</p>
                    </div>
                </a>
                <a asp-controller="Profile" asp-action="Contact" class="no-underline">
                    <div class="grid-item">
                        <img src="https://sin1.contabostorage.com/9414348a03c9471cb842d448f65ca5fb:icoder/backend/imageidentity/contactInfomation.png" alt="Contact Infomation" style="width:60px;height:60px;">
                        <p>Contact Infomation</p>
                    </div>
                </a>
                <a asp-controller="Profile" asp-action="ChangePassword" class="no-underline">
                    <div class="grid-item">
                        <img src="https://sin1.contabostorage.com/9414348a03c9471cb842d448f65ca5fb:icoder/backend/imageidentity/password.png" alt="Password" style="width:60px;height:60px;">
                        <p>Change Password</p>
                    </div>
                </a>
                <a asp-controller="Profile" asp-action="TwoFactorAuthManager" class="no-underline">
                    <div class="grid-item">
                        <img src="https://sin1.contabostorage.com/9414348a03c9471cb842d448f65ca5fb:icoder/backend/imageidentity/2fa.png" alt="Two-Factor Authentication" style="width:60px;height:60px;">
                        <p>Two-Factor Authentication</p>
                    </div>
                </a>
                <div class="grid-item">
                    <img src="https://sin1.contabostorage.com/9414348a03c9471cb842d448f65ca5fb:icoder/backend/imageidentity/key.png" alt="Access security code" style="width:60px;height:60px;">
                    <p>Access security code</p>
                </div>
                <div class="grid-item">
                    <img src="https://sin1.contabostorage.com/9414348a03c9471cb842d448f65ca5fb:icoder/backend/imageidentity/oauth.png" alt="OAuth Applications" style="width:60px;height:60px;">
                    <p>OAuth Applications</p>
                </div>
            </div>
        </div>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script>

        // JavaScript để thu gọn thanh bên
        document.getElementById("toggleSidebar").addEventListener("click", function () {
            var sidebar = document.getElementById("sidebar");
            var content = document.getElementById("content");
            var toggleIcon = this.querySelector("i"); // Chọn icon cần xoay
            var toggleText = document.getElementById("sidebarToggleText"); // Chọn text hiển thị

            closeAllCollapses(); // Đóng tất cả các mục đang mở trước khi thu gọn
            sidebar.classList.toggle("collapsed"); // Thêm hoặc bỏ lớp "collapsed"
            content.classList.toggle("collapsed");

            // Kiểm tra nếu sidebar đang thu gọn
            if (sidebar.classList.contains("collapsed")) {
                toggleIcon.classList.remove("fa-angle-double-left");
                toggleIcon.classList.add("fa-angle-double-right"); // Đổi icon sang hướng bên phải
                toggleText.style.display = "none"; // Ẩn text khi sidebar thu gọn
            } else {
                toggleIcon.classList.remove("fa-angle-double-right");
                toggleIcon.classList.add("fa-angle-double-left"); // Đổi icon sang hướng bên trái
                toggleText.style.display = "inline"; // Hiển thị lại text khi sidebar mở rộng
            }

            closeAllPopups(); // Đóng tất cả pop-up khi thu gọn
            resetArrows(); // Reset mũi tên khi thu gọn
        });

        function closeAllCollapses() {
            // Đóng tất cả các collapse nếu đang mở
            var bsCollapseMyInfo = new bootstrap.Collapse(document.getElementById("myInfo"), {
                toggle: false
            });
            bsCollapseMyInfo.hide();

            var bsCollapseSecurity = new bootstrap.Collapse(document.getElementById("security"), {
                toggle: false
            });
            bsCollapseSecurity.hide();

            var bsCollapseDeveloperSettings = new bootstrap.Collapse(document.getElementById("developerSettings"), {
                toggle: false
            });
            bsCollapseDeveloperSettings.hide();
        }

        function closeAllPopups() {
            document.getElementById("popupMyInfo").style.display = "none";
            document.getElementById("popupSecurity").style.display = "none";
            document.getElementById("popupDeveloperSettings").style.display = "none";
        }

        function resetArrows() {
            document.getElementById("arrowMyInfo").classList.remove("rotate");
            document.getElementById("arrowSecurity").classList.remove("rotate");
            document.getElementById("arrowDeveloperSettings").classList.remove("rotate");
        }

        document.getElementById("toggleMyInfo").addEventListener("click", function (e) {
            var sidebar = document.getElementById("sidebar");
            var myInfoCollapse = document.getElementById("myInfo");
            var arrowMyInfo = document.getElementById("arrowMyInfo");
            var popupMyInfo = document.getElementById("popupMyInfo");
            closeAllPopups(); // Đóng tất cả pop-up trước khi mở pop-up mới

            // Kiểm tra xem sidebar có thu gọn không
            if (sidebar.classList.contains("collapsed")) {
                var iconRect = e.currentTarget.getBoundingClientRect(); // Lấy vị trí chính xác của phần tử
                popupMyInfo.style.top = (iconRect.top - 60) + 'px'; // Điều chỉnh vị trí của pop-up theo vị trí phần tử
                popupMyInfo.style.display = "block";
            } else {
                var bsCollapse = new bootstrap.Collapse(myInfoCollapse, {
                    toggle: false
                });
                if (myInfoCollapse.classList.contains("show")) {
                    bsCollapse.hide();
                    arrowMyInfo.classList.remove("rotate");
                } else {
                    bsCollapse.show();
                    arrowMyInfo.classList.add("rotate");
                }
            }
        });

        document.getElementById("toggleSecurity").addEventListener("click", function (e) {
            var sidebar = document.getElementById("sidebar");
            var securityCollapse = document.getElementById("security");
            var arrowSecurity = document.getElementById("arrowSecurity");
            var popupSecurity = document.getElementById("popupSecurity");
            closeAllPopups(); // Đóng tất cả pop-up trước khi mở pop-up mới

            // Kiểm tra xem sidebar có thu gọn không
            if (sidebar.classList.contains("collapsed")) {
                var iconRect = e.currentTarget.getBoundingClientRect(); // Lấy vị trí chính xác của phần tử
                popupSecurity.style.top = (iconRect.top - 60) + 'px'; // Điều chỉnh vị trí của pop-up theo vị trí phần tử
                popupSecurity.style.display = "block";
            } else {
                var bsCollapse = new bootstrap.Collapse(securityCollapse, {
                    toggle: false
                });
                if (securityCollapse.classList.contains("show")) {
                    bsCollapse.hide();
                    arrowSecurity.classList.remove("rotate");
                } else {
                    bsCollapse.show();
                    arrowSecurity.classList.add("rotate");
                }
            }
        });

        document.getElementById("toggleDeveloperSettings").addEventListener("click", function (e) {
            var sidebar = document.getElementById("sidebar");
            var developerSettingsCollapse = document.getElementById("developerSettings");
            var arrowDeveloperSettings = document.getElementById("arrowDeveloperSettings");
            var popupDeveloperSettings = document.getElementById("popupDeveloperSettings");
            closeAllPopups(); // Đóng tất cả pop-up trước khi mở pop-up mới

            // Kiểm tra xem sidebar có thu gọn không
            if (sidebar.classList.contains("collapsed")) {
                var iconRect = e.currentTarget.getBoundingClientRect(); // Lấy vị trí chính xác của phần tử
                popupDeveloperSettings.style.top = (iconRect.top - 60) + 'px'; // Điều chỉnh vị trí của pop-up theo vị trí phần tử
                popupDeveloperSettings.style.display = "block";
            } else {
                var bsCollapse = new bootstrap.Collapse(developerSettingsCollapse, {
                    toggle: false
                });
                if (developerSettingsCollapse.classList.contains("show")) {
                    bsCollapse.hide();
                    arrowDeveloperSettings.classList.remove("rotate");
                } else {
                    bsCollapse.show();
                    arrowDeveloperSettings.classList.add("rotate");
                }
            }
        });

        // Thêm sự kiện lắng nghe click cho toàn bộ tài liệu để đóng pop-up khi nhấn chuột ra ngoài
        document.addEventListener("click", function (event) {
            var popupMyInfo = document.getElementById("popupMyInfo");
            var popupSecurity = document.getElementById("popupSecurity");
            var popupDeveloperSettings = document.getElementById("popupDeveloperSettings");

            // Kiểm tra nếu nhấp vào bên ngoài pop-up hoặc các nút kích hoạt
            if (!popupMyInfo.contains(event.target) && !document.getElementById("toggleMyInfo").contains(event.target)) {
                popupMyInfo.style.display = "none"; // Đóng pop-up Thông Tin Của Tôi
            }
            if (!popupSecurity.contains(event.target) && !document.getElementById("toggleSecurity").contains(event.target)) {
                popupSecurity.style.display = "none"; // Đóng pop-up Bảo Mật
            }
            if (!popupDeveloperSettings.contains(event.target) && !document.getElementById("toggleDeveloperSettings").contains(event.target)) {
                popupDeveloperSettings.style.display = "none"; // Đóng pop-up Cài Đặt Nhà Phát Triển
            }
        });


        document.addEventListener("DOMContentLoaded", function () {
            var toastSuccess = document.getElementById("toast-success");
            var toastError = document.getElementById("toast-error");

            // Hiển thị và tự động ẩn toast thành công
            if (toastSuccess) {
                toastSuccess.classList.add("show"); // Hiện thông báo
                setTimeout(function () {
                    toastSuccess.style.opacity = "0"; // Bắt đầu hiệu ứng mờ dần
                    setTimeout(function () {
                        toastSuccess.style.display = "none"; // Ẩn thông báo hoàn toàn sau khi mờ
                    }, 1000); // Thời gian cho hiệu ứng mờ
                }, 5000); // Hiện thông báo trong 5 giây (bạn có thể thay đổi thời gian)
            }

            // Hiển thị và tự động ẩn toast thất bại
            if (toastError) {
                toastError.classList.add("show"); // Hiện thông báo
                setTimeout(function () {
                    toastError.style.opacity = "0"; // Bắt đầu hiệu ứng mờ dần
                    setTimeout(function () {
                        toastError.style.display = "none"; // Ẩn thông báo hoàn toàn sau khi mờ
                    }, 1000); // Thời gian cho hiệu ứng mờ
                }, 5000); // Hiện thông báo trong 5 giây (bạn có thể thay đổi thời gian)
            }
        });

        // Extract 'sub' claim (userId) from Razor syntax
        var userId = '@User.FindFirst("sub")?.Value';

        // Function to fetch profile image URL by userId
        async function fetchProfileImage(userId) {
            try {
                // Make the API call to get the presigned URL
                const response = await fetch(`https://localhost:6005/users/${userId}/image`);

                if (!response.ok) {
                    throw new Error('Failed to fetch the image');
                }

                // Parse the response as JSON
                const data = await response.json();

                // Assuming the API response is like: { ImageUrlProfile: 'presigned-url' }
                const imageUrl = data.imageUrlProfile;

                // Set the image URL as the src of the avatar image
                document.getElementById('avatarPreview').src = imageUrl;
            } catch (error) {
                console.error('Error fetching profile image:', error);
            }
        }

        // Call the function to fetch the image using the userId
        fetchProfileImage(userId);

    </script>
</body>
</html>
