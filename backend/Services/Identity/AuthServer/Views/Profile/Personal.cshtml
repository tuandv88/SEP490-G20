@using AuthServer.Models.ProfileViewModel

@model PersonalViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Personal Information Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Arial', sans-serif;
        }

        .container-fluid {
            padding: 0; /* Xóa khoảng cách xung quanh container */
        }

        .content {
            padding: 30px;
            margin-top: 60px; /* Khoảng cách top luôn cố định */
            transition: margin-left 0.3s ease, width 0.3s ease;
            max-width: 800px; /* Giới hạn chiều rộng tối đa */
            width: calc(100% - 250px); /* Chiều rộng khi sidebar mở */
            margin: 0 auto; /* Căn giữa */
        }

            .content.collapsed {
                width: calc(100% - 80px); /* Chiều rộng khi sidebar thu gọn */
                margin-top: 60px; /* Giữ nguyên khoảng cách top */
                margin: 0 auto; /* Giữ căn giữa */
            }

        .sidebar {
            width: 250px;
            min-height: 100vh;
            background-color: #f8f9fa;
            border-right: 1px solid #dee2e6;
            transition: width 0.3s ease; /* Hiệu ứng mở rộng và thu gọn sidebar */
            position: fixed; /* Đảm bảo sidebar luôn sát lề trái */
            left: 0;
            top: 60px; /* Điều chỉnh chiều cao top dựa trên chiều cao của navbar */
            z-index: 900;
        }

            .sidebar.collapsed {
                width: 80px; /* Khi sidebar thu gọn */
            }

            .sidebar .nav-link {
                font-weight: normal; /* Sửa font-weight về bình thường */
                font-size: 15px;
                color: #333;
                display: flex;
                align-items: center;
                cursor: pointer;
                transition: background-color 0.3s, color 0.3s;
                position: relative;
            }

            .sidebar.collapsed .nav-link {
                justify-content: center; /* Icon được căn giữa khi thanh bên thu gọn */
            }

            .sidebar .nav-link i {
                color: #6c757d; /* Đặt màu xám cho biểu tượng */
            }

            .sidebar .nav-link span {
                margin-left: 10px;
            }

            .sidebar.collapsed .nav-link span,
            .sidebar.collapsed .nav-link .toggle-arrow {
                display: none; /* Ẩn văn bản và mũi tên khi thu gọn */
            }

            .sidebar .nav-link:hover {
                background-color: #e9ecef;
                color: #007bff; /* Màu xanh dương khi hover */
            }

            .sidebar .nav-item .nav-link.active,
            .sidebar .nav-link.active {
                background-color: #e7f1ff; /* Màu xanh dương nhạt khi mục được chọn */
                color: #007bff;
            }

            .sidebar .collapse.show {
                background-color: #f1f3f5;
            }

            .sidebar .icon {
                margin-right: 10px;
            }

            /* Căn chỉnh mục con luôn thụt vào */
            .sidebar .nav-link.toggle-btn {
                padding-left: 40px; /* Luôn thụt lề cho các mục con */
            }

        .toggle-arrow {
            margin-left: auto;
            transition: transform 0.3s;
        }

            .toggle-arrow.rotate {
                transform: rotate(90deg);
            }

        .user-header {
            margin-bottom: 30px;
        }

            .user-header h2 {
                margin: 0;
                font-size: 28px;
            }

        /* Popup menu */
        .popup-menu {
            display: none;
            position: absolute;
            left: calc(100% + 10px); /* Hiển thị ngay bên phải phần tử cha */
            background-color: #fff;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            padding: 10px 0;
            width: 200px;
            z-index: 10;
            border-radius: 4px;
        }

            .popup-menu a {
                padding: 10px;
                font-size: 14px;
                display: block;
                color: #333;
                text-decoration: none;
                transition: background-color 0.3s, color 0.3s;
            }

                .popup-menu a:hover {
                    background-color: #e9ecef;
                    color: #007bff; /* Màu xanh dương khi hover */
                }

        /* Đảm bảo chữ trong header không bị in đậm và căn lề cho hợp lý */
        .navbar {
            display: flex;
            justify-content: space-between; /* Căn đều hai bên */
            align-items: center; /* Căn giữa theo chiều dọc */
            background-color: #f8f9fa; /* Màu nền navbar */
            padding-right: 20px; /* Tạo khoảng cách giữa nội dung và hai mép của navbar */
            padding-left: 20px; /* Thêm khoảng cách bên trái để chữ không dính vào lề */
        }

            .navbar .navbar-brand {
                font-weight: normal; /* Đặt lại kiểu chữ mặc định */
                font-size: 1.25rem; /* Đặt kích thước chữ phù hợp */
            }

            .navbar .nav-link {
                font-weight: normal; /* Đặt lại kiểu chữ mặc định */
                font-size: 1rem; /* Thiết lập kích thước chữ cho các link */
            }

        .content {
            padding: 20px;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            margin: 20px auto;
            max-width: 800px; /* Form sẽ có độ rộng tối đa là 800px */
            width: 100%; /* Form sẽ chiếm 100% màn hình trên các kích thước nhỏ hơn */
        }

        .personal-info h4 {
            font-size: 1.5rem;
            font-weight: bold;
            margin-bottom: 10px;
            text-align: center;
        }

        .personal-info p {
            font-size: 1rem;
            color: #666;
            text-align: center;
            margin-bottom: 20px;
        }

        .form-label {
            font-weight: 500;
        }

        .text-center img {
            display: block;
            margin: 0 auto;
        }

        .btn {
            display: block;
            margin: 0 auto;
        }

        .row {
            display: flex;
            justify-content: space-between;
        }

        @@media (max-width: 768px) {
            /* Trên màn hình nhỏ hơn 768px (máy tính bảng và điện thoại) */
            .row {
                flex-direction: column; /* Chuyển các input từ dạng ngang sang dọc */
            }

            .col-md-6 {
                width: 100%; /* Các phần tử trong row sẽ chiếm 100% chiều rộng */
                margin-bottom: 15px; /* Thêm khoảng cách giữa các input */
            }

            .content {
                padding: 15px; /* Giảm padding để vừa với màn hình nhỏ */
            }
        }

        @@media (max-width: 576px) {
            /* Trên màn hình nhỏ hơn 576px (điện thoại) */
            .personal-info h4 {
                font-size: 1.2rem; /* Giảm kích thước chữ trên màn hình nhỏ */
            }

            .personal-info p {
                font-size: 0.9rem; /* Giảm kích thước chữ trên màn hình nhỏ */
            }

            .text-center img {
                width: 80px;
                height: 80px; /* Giảm kích thước avatar trên màn hình nhỏ */
            }

            .btn {
                font-size: 0.9rem; /* Giảm kích thước nút trên màn hình nhỏ */
            }
        }

        /* Style cho nút Bỏ qua */
        .btn-cancel {
            background-color: white;
            color: #6c757d;
            border: 1px solid #ced4da;
            padding: 0.5rem 1.25rem;
            font-size: 0.95rem;
            border-radius: 4px;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }

            /* Hover effect cho nút Bỏ qua */
            .btn-cancel:hover {
                background-color: #f8f9fa;
                color: #495057;
                border-color: #adb5bd;
            }

        /* Style cho nút Thêm */
        .btn-add {
            background-color: #e7f1ff;
            color: #007bff;
            border: 1px solid #b3d7ff;
            padding: 0.5rem 1.25rem;
            font-size: 0.95rem;
            border-radius: 4px;
            transition: background-color 0.3s, color 0.3s, border-color 0.3s;
        }

            /* Hover effect cho nút Thêm */
            .btn-add:hover {
                background-color: #cfe2ff;
                color: #0056b3;
                border-color: #80bfff;
            }

        /* Error message styling */
        .error-message {
            background-color: #fdecea;
            color: #e74c3c;
            padding: 0px;
            border-radius: 8px;
            border: 1px solid #f5c6cb;
            margin-bottom: 10px;
            text-align: left;
            font-size: 14px;
            min-height: 30px;
            height: auto;
            box-shadow: 0px 2px 10px rgba(231, 76, 60, 0.1);
            transition: all 0.3s ease;
            text-align: center;
        }

            .error-message .text-danger {
                display: inline-block;
                margin-left: 5px;
            }

            /* Error message fade-in animation */
            .error-message.show {
                opacity: 1;
            }

            .error-message.hide {
                opacity: 0;
                display: none;
            }

        .text-danger {
            font-size: 12px;
            color: #e74c3c;
            margin-top: 5px;
            margin-bottom: 5px;
            display: block;
            text-align: left;
        }

        ul li {
            list-style: none; /* Bỏ marker cho các phần tử li */
        }
        /* Kích thước ảnh avatar cố định là 200x200 px */
        .avatar-size {
            width: 200px;
            height: 200px;
            object-fit: cover; /* Cắt ảnh để phù hợp với kích thước */
        }

        /* Đảm bảo ảnh trong modal không thay đổi kích thước */
        .text-center img {
            display: block;
            margin: 0 auto;
            cursor: pointer;
            width: 200px; /* Kích thước cố định */
            height: 200px; /* Kích thước cố định */
            transition: transform 0.3s ease;
        }

            /* Hover effect cho ảnh */
            .text-center img:hover {
                transform: scale(1.05);
            }

        #previewImage {
            width: 200px;
            height: 200px;
            object-fit: cover; /* Cắt ảnh sao cho vừa khít với kích thước */
            display: block;
            margin: 0 auto;
        }

            /* Các kiểu hover cho ảnh */
            #previewImage:hover {
                transform: scale(1.05);
                transition: transform 0.3s ease;
            }

        /* Nút Lưu ảnh disabled */
        #saveAvatar:disabled {
            background-color: #d6d6d6;
            border-color: #ccc;
            cursor: not-allowed;
        }

        /* Nút Lưu ảnh */
        #saveAvatar {
            padding: 0.6rem 1.2rem;
            border-radius: 0.375rem;
            background-color: #3b7ed0;
            color: white;
            font-weight: 600;
            border: 1px solid #3b7ed0;
            transition: all 0.3s ease;
        }

            #saveAvatar:hover {
                background-color: #0056b3;
                border-color: #004085;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            }

        /* Các nút chỉnh sửa ảnh */
        .footer-btn {
            background-color: #fff;
            border: 1px solid #ced4da;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            font-size: 18px;
            color: #555;
            transition: background-color 0.3s, box-shadow 0.3s;
        }

            .footer-btn:hover {
                background-color: #f0f0f0;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            }

        /* Canh giữa nút trong container */
        .button-changeavatar-container {
            display: flex;
            justify-content: center; /* Canh giữa theo chiều ngang */
            align-items: center; /* Canh giữa theo chiều dọc */
        }

        /* Nút chính với kích thước nhỏ hơn và màu xám */
        .change-avatar-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 8px 15px;
            background-color: #6c757d; /* Màu xám */
            color: white;
            border: none;
            font-size: 12px; /* Giảm kích thước chữ */
            font-weight: 500; /* Giảm độ đậm của chữ */
            border-radius: 20px; /* Góc bo tròn nhỏ hơn */
            cursor: pointer;
            transition: all 0.2s ease-in-out;
        }

            /* Hiệu ứng khi hover (di chuột lên nút) */
            .change-avatar-btn:hover {
                background-color: #5a6268; /* Màu xám đậm hơn khi hover */
                transform: scale(1.05); /* Phóng to nhẹ khi hover */
            }

            /* Hiệu ứng khi focus (nút được chọn) */
            .change-avatar-btn:focus {
                outline: none; /* Tắt outline mặc định */
                box-shadow: 0 0 5px 2px rgba(108, 117, 125, 0.6); /* Hiệu ứng focus màu xám */
            }

            /* Hiệu ứng khi nhấn nút */
            .change-avatar-btn:active {
                transform: scale(0.98); /* Co lại khi nhấn */
            }

        /* Đồng bộ phong cách toàn bộ form */
        .content {
            background: linear-gradient(145deg, #ffffff, #f7f7f7); /* Nền gradient nhẹ */
            border: 1px solid #e3e3e3; /* Viền nhạt */
            border-radius: 12px; /* Bo góc form */
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1); /* Đổ bóng */
            padding: 20px 30px; /* Tăng khoảng cách bên trong */
            margin-bottom: 20px;
            max-width: 600px;
            margin: 50px auto; /* Căn giữa form */
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .content:hover {
                transform: translateY(-5px); /* Nhấc lên nhẹ */
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15); /* Đổ bóng mạnh hơn */
            }

        /* Nhãn form */
        .form-label {
            font-size: 1rem;
            font-weight: 600; /* Chữ đậm hơn */
            color: #495057; /* Màu chữ nhã nhặn */
        }

        /* Input */
        input.form-control {
            height: 45px; /* Chiều cao đồng bộ */
            font-size: 1rem;
            padding: 10px 12px; /* Khoảng cách rộng hơn */
            border-radius: 8px; /* Bo góc input */
            border: 1px solid #ced4da; /* Viền nhạt */
            transition: border-color 0.3s, box-shadow 0.3s;
        }

            input.form-control:focus {
                border-color: #007bff; /* Viền xanh khi focus */
                box-shadow: 0 0 8px rgba(0, 123, 255, 0.25); /* Ánh sáng nhẹ */
            }

        /* Nhấn mạnh lỗi */
        span.text-danger {
            font-size: 0.85rem; /* Chữ nhỏ gọn */
            color: #e63946; /* Màu đỏ nổi bật */
        }

        /* Nút */
        .btn-cancel {
            background-color: #f8f9fa;
            color: #6c757d;
            border: 1px solid #ced4da;
            padding: 0.5rem 1.25rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

            .btn-cancel:hover {
                background-color: #e9ecef;
                color: #495057;
                transform: translateY(-2px); /* Nhấc nút */
            }

        .btn-add {
            background-color: #007bff;
            color: #fff;
            border: none;
            box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);
            padding: 0.5rem 1.25rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

            .btn-add:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }

        /* Responsive cải tiến */
        @@media (max-width: 768px) {
            .content {
                padding: 15px;
            }

            .row {
                flex-direction: column;
            }

            .col-md-6 {
                width: 100%;
            }
        }

    </style>
</head>
<body>
    <div class="container-fluid d-flex">
        <div class="sidebar p-3" id="sidebar">
            <nav class="nav flex-column">
                <!-- Phần Trang Chủ -->
                <a class="nav-link" asp-controller="Profile" asp-action="Index">
                    <i class="fas fa-home icon"></i>
                    <span>Home</span>
                </a>

                <!-- Phần Thông Tin Của Tôi -->
                <a class="nav-link" id="toggleMyInfo" href="javascript:void(0)">
                    <i class="fas fa-address-card icon"></i>
                    <span>My Information</span>
                    <i class="fas fa-chevron-right toggle-arrow" id="arrowMyInfo"></i>
                </a>
                <div class="collapse" id="myInfo">
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="Personal">
                        <i class="fas fa-user icon"></i>
                        <span>Personal Information</span>
                    </a>
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="Contact">
                        <i class="fas fa-id-badge icon"></i>
                        <span>Contact Information</span>
                    </a>
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="Emails">
                        <i class="fas fa-envelope icon"></i>
                        <span>Emails</span>
                    </a>
                </div>

                <!-- Pop-up khi thanh bên thu gọn -->
                <div class="popup-menu" id="popupMyInfo">
                    <a asp-controller="Profile" asp-action="Personal">
                        <i class="fas fa-user icon"></i>Personal Information
                    </a>
                    <a asp-controller="Profile" asp-action="Contact">
                        <i class="fas fa-id-badge icon"></i>Contact Information
                    </a>
                    <a asp-controller="Profile" asp-action="Emails">
                        <i class="fas fa-envelope icon"></i>Emails
                    </a>
                </div>

                <!-- Phần Bảo Mật -->
                <a class="nav-link" id="toggleSecurity" href="javascript:void(0)">
                    <i class="fas fa-shield-alt icon"></i>
                    <span>Security</span>
                    <i class="fas fa-chevron-right toggle-arrow" id="arrowSecurity"></i>
                </a>
                <div class="collapse" id="security">
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="ChangePassword">
                        <i class="fas fa-key icon"></i>
                        <span>Password</span>
                    </a>
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="TwoFactorAuthManager">
                        <i class="fas fa-mobile-alt icon"></i>
                        <span>Two-Factor Authentication</span>
                    </a>
                    <a class="nav-link toggle-btn" href="#!">
                        <i class="fas fa-link icon"></i>
                        <span>Linked Accounts</span>
                    </a>
                </div>

                <!-- Pop-up khi thanh bên thu gọn -->
                <div class="popup-menu" id="popupSecurity">
                    <a asp-controller="Profile" asp-action="ChangePassword">
                        <i class="fas fa-key icon"></i> Password
                    </a>
                    <a class="nav-link toggle-btn" asp-controller="Profile" asp-action="TwoFactorAuthManager">
                        <i class="fas fa-mobile-alt icon"></i>
                        <span>Two-Factor Authentication</span>
                    </a>
                    <a href="#!">
                        <i class="fas fa-link icon"></i> Linked Accounts
                    </a>
                </div>

                <!-- Phần Cài Đặt Nhà Phát Triển -->
                <a class="nav-link" id="toggleDeveloperSettings" href="javascript:void(0)">
                    <i class="fas fa-cogs icon"></i>
                    <span>Developer Settings</span>
                    <i class="fas fa-chevron-right toggle-arrow" id="arrowDeveloperSettings"></i>
                </a>
                <div class="collapse" id="developerSettings">
                    <a class="nav-link toggle-btn" href="#!">
                        <i class="fas fa-code icon"></i>
                        <span>OAuth Applications</span>
                    </a>
                    <a class="nav-link toggle-btn" href="#!">
                        <i class="fas fa-key icon"></i>
                        <span>Access security code</span>
                    </a>
                    <a class="nav-link toggle-btn" href="#!">
                        <i class="fas fa-user-shield icon"></i>
                        <span>Authorized OAuth Applications</span>
                    </a>
                </div>

                <!-- Pop-up khi thanh bên thu gọn -->
                <div class="popup-menu" id="popupDeveloperSettings">
                    <a href="#!">
                        <i class="fas fa-code icon"></i>OAuth Applications
                    </a>
                    <a href="#!">
                        <i class="fas fa-key icon"></i>Access security code
                    </a>
                    <a href="#!">
                        <i class="fas fa-user-shield icon"></i>Authorized OAuth Applications
                    </a>
                </div>

                <div>
                    <a class="nav-link" id="toggleSidebar" href="javascript:void(0)">
                        <i class="fas fa-angle-double-left icon"></i>
                        <span id="sidebarToggleText">Collapse sidebar</span>
                    </a>
                </div>

            </nav>

        </div>

        <div class="content" id="content">
            <div class="personal-info">
                <h4>Personal Information</h4>
                <p>Manage your personal information.</p>

                <!-- Avatar hiển thị -->
                <div class="text-center mb-4">
                    <img id="avatarPreview" src="@Model.urlAvatar" alt="User Avatar" class="rounded-circle" style="width: 120px; height: 120px;  object-fit: cover; border: 3px solid #ddd;">
                    <div class="button-changeavatar-container">
                        <button class="change-avatar-btn" id="changeAvatarButton">
                            <span>Change Avatar</span>
                        </button>
                    </div>
                </div>

                <!-- Modal -->
                <div class="modal fade" id="changeAvatarModal" tabindex="-1" aria-labelledby="changeAvatarModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header bg-light">
                                <h5 class="modal-title" id="changeAvatarModalLabel">Change Profile Picture</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body text-center">
                                <div class="avatar-upload">
                                    <!-- Xóa nút chọn ảnh -->
                                    <input type="file" id="uploadAvatar" style="display:none" accept="image/*">
                                    <div class="preview-container">
                                        <img id="previewImage" src="" alt="Preview" class="img-fluid rounded shadow-sm">
                                    </div>
                                    <!-- Gợi ý thêm vào -->
                                    <small class="text-muted mt-2 d-block">Click on the photo to select the photo</small>
                                    <small class="text-muted mt-2 d-block">Tip: Use the buttons below to edit the photo.</small>
                                </div>
                            </div>
                            <div class="modal-footer justify-content-center">
                                <button id="rotateLeft" class="footer-btn btn-light shadow-sm" title="Rotate Left">↺</button>
                                <button id="flipHorizontal" class="footer-btn btn-light shadow-sm" title="Flip Horizontal">↔</button>
                                <button id="flipVertical" class="footer-btn btn-light shadow-sm" title="Flip Vertical">↕</button>
                                <button id="rotateRight" class="footer-btn btn-light shadow-sm" title="Rotate Right">↻</button>
                                <button type="button" class="btn btn-primary shadow-sm" id="saveAvatar" disabled>Save Image</button>
                            </div>
                        </div>
                    </div>
                </div>



                <!-- Display validation error message -->
                @if (!ViewData.ModelState.IsValid && !string.IsNullOrWhiteSpace(Html.ValidationSummary(true).ToString()))
                {
                    <div class="error-message show">
                        <span> @Html.ValidationSummary(true, "", new { @class = "text-danger" })</span>
                    </div>
                }

                <form id="myForm" asp-controller="Profile" asp-action="Personal">
                    <!-- Hidden returnUrl -->
                    <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />

                    <div class="mb-3">
                        <label for="username" class="form-label">User Name:</label>
                        <input type="text" asp-for="UserName" class="form-control" value="@Model?.UserName" readonly>
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="displayName" class="form-label">First Name:</label>
                            <input type="text" asp-for="FirstName" class="form-control" value="@Model?.FirstName">
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="displayName" class="form-label">Last Name:</label>
                            <input type="text" asp-for="LastName" class="form-control" value="@Model?.LastName">
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-md-6 mb-3">
                        <label for="birthdate" class="form-label">Date Of Birth: </label>
                        <input type="date" asp-for="Dob" class="form-control" value="@Model?.Dob.ToString("yyyy-MM-dd")">
                        <span asp-validation-for="Dob" class="text-danger"></span>
                    </div>

                    <div class="d-flex justify-content-end flex-wrap">
                        <button type="button" class="btn-cancel me-2 mb-2" onclick="clearForm()">Cancel</button>
                        <button type="submit" class="btn-add mb-2">Update</button>
                    </div>
                </form>
            </div>
        </div>


    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
    <script>

        // JavaScript để thu gọn thanh bên
        document.getElementById("toggleSidebar").addEventListener("click", function () {
            var sidebar = document.getElementById("sidebar");
            var content = document.getElementById("content");
            var toggleIcon = this.querySelector("i");
            var toggleText = document.getElementById("sidebarToggleText");

            closeAllCollapses(); // Đóng các collapse nếu cần
            sidebar.classList.toggle("collapsed"); // Toggle trạng thái collapsed cho sidebar
            content.classList.toggle("collapsed"); // Toggle trạng thái collapsed cho content

            // Kiểm tra nếu sidebar đang thu gọn
            if (sidebar.classList.contains("collapsed")) {
                toggleIcon.classList.remove("fa-angle-double-left");
                toggleIcon.classList.add("fa-angle-double-right");
                toggleText.style.display = "none"; // Ẩn text khi thu gọn
            } else {
                toggleIcon.classList.remove("fa-angle-double-right");
                toggleIcon.classList.add("fa-angle-double-left");
                toggleText.style.display = "inline"; // Hiển thị text khi sidebar mở
            }

            closeAllPopups(); // Đóng các pop-up nếu cần
            resetArrows(); // Reset mũi tên nếu cần
        });


        function closeAllCollapses() {
            // Đóng tất cả các collapse nếu đang mở
            var bsCollapseMyInfo = new bootstrap.Collapse(document.getElementById("myInfo"), {
                toggle: false
            });
            bsCollapseMyInfo.hide();

            var bsCollapseSecurity = new bootstrap.Collapse(document.getElementById("security"), {
                toggle: false
            });
            bsCollapseSecurity.hide();

            var bsCollapseDeveloperSettings = new bootstrap.Collapse(document.getElementById("developerSettings"), {
                toggle: false
            });
            bsCollapseDeveloperSettings.hide();
        }

        function closeAllPopups() {
            document.getElementById("popupMyInfo").style.display = "none";
            document.getElementById("popupSecurity").style.display = "none";
            document.getElementById("popupDeveloperSettings").style.display = "none";
        }

        function resetArrows() {
            document.getElementById("arrowMyInfo").classList.remove("rotate");
            document.getElementById("arrowSecurity").classList.remove("rotate");
            document.getElementById("arrowDeveloperSettings").classList.remove("rotate");
        }

        document.getElementById("toggleMyInfo").addEventListener("click", function (e) {
            var sidebar = document.getElementById("sidebar");
            var myInfoCollapse = document.getElementById("myInfo");
            var arrowMyInfo = document.getElementById("arrowMyInfo");
            var popupMyInfo = document.getElementById("popupMyInfo");
            closeAllPopups(); // Đóng tất cả pop-up trước khi mở pop-up mới

            // Kiểm tra xem sidebar có thu gọn không
            if (sidebar.classList.contains("collapsed")) {
                var iconRect = e.currentTarget.getBoundingClientRect(); // Lấy vị trí chính xác của phần tử
                popupMyInfo.style.top = (iconRect.top - 60) + 'px'; // Điều chỉnh vị trí của pop-up theo vị trí phần tử
                popupMyInfo.style.display = "block";
            } else {
                var bsCollapse = new bootstrap.Collapse(myInfoCollapse, {
                    toggle: false
                });
                if (myInfoCollapse.classList.contains("show")) {
                    bsCollapse.hide();
                    arrowMyInfo.classList.remove("rotate");
                } else {
                    bsCollapse.show();
                    arrowMyInfo.classList.add("rotate");
                }
            }
        });

        document.getElementById("toggleSecurity").addEventListener("click", function (e) {
            var sidebar = document.getElementById("sidebar");
            var securityCollapse = document.getElementById("security");
            var arrowSecurity = document.getElementById("arrowSecurity");
            var popupSecurity = document.getElementById("popupSecurity");
            closeAllPopups(); // Đóng tất cả pop-up trước khi mở pop-up mới

            // Kiểm tra xem sidebar có thu gọn không
            if (sidebar.classList.contains("collapsed")) {
                var iconRect = e.currentTarget.getBoundingClientRect(); // Lấy vị trí chính xác của phần tử
                popupSecurity.style.top = (iconRect.top - 60) + 'px'; // Điều chỉnh vị trí của pop-up theo vị trí phần tử
                popupSecurity.style.display = "block";
            } else {
                var bsCollapse = new bootstrap.Collapse(securityCollapse, {
                    toggle: false
                });
                if (securityCollapse.classList.contains("show")) {
                    bsCollapse.hide();
                    arrowSecurity.classList.remove("rotate");
                } else {
                    bsCollapse.show();
                    arrowSecurity.classList.add("rotate");
                }
            }
        });

        document.getElementById("toggleDeveloperSettings").addEventListener("click", function (e) {
            var sidebar = document.getElementById("sidebar");
            var developerSettingsCollapse = document.getElementById("developerSettings");
            var arrowDeveloperSettings = document.getElementById("arrowDeveloperSettings");
            var popupDeveloperSettings = document.getElementById("popupDeveloperSettings");
            closeAllPopups(); // Đóng tất cả pop-up trước khi mở pop-up mới

            // Kiểm tra xem sidebar có thu gọn không
            if (sidebar.classList.contains("collapsed")) {
                var iconRect = e.currentTarget.getBoundingClientRect(); // Lấy vị trí chính xác của phần tử
                popupDeveloperSettings.style.top = (iconRect.top - 60) + 'px'; // Điều chỉnh vị trí của pop-up theo vị trí phần tử
                popupDeveloperSettings.style.display = "block";
            } else {
                var bsCollapse = new bootstrap.Collapse(developerSettingsCollapse, {
                    toggle: false
                });
                if (developerSettingsCollapse.classList.contains("show")) {
                    bsCollapse.hide();
                    arrowDeveloperSettings.classList.remove("rotate");
                } else {
                    bsCollapse.show();
                    arrowDeveloperSettings.classList.add("rotate");
                }
            }
        });

        // Thêm sự kiện lắng nghe click cho toàn bộ tài liệu để đóng pop-up khi nhấn chuột ra ngoài
        document.addEventListener("click", function (event) {
            var popupMyInfo = document.getElementById("popupMyInfo");
            var popupSecurity = document.getElementById("popupSecurity");
            var popupDeveloperSettings = document.getElementById("popupDeveloperSettings");

            // Kiểm tra nếu nhấp vào bên ngoài pop-up hoặc các nút kích hoạt
            if (!popupMyInfo.contains(event.target) && !document.getElementById("toggleMyInfo").contains(event.target)) {
                popupMyInfo.style.display = "none"; // Đóng pop-up Thông Tin Của Tôi
            }
            if (!popupSecurity.contains(event.target) && !document.getElementById("toggleSecurity").contains(event.target)) {
                popupSecurity.style.display = "none"; // Đóng pop-up Bảo Mật
            }
            if (!popupDeveloperSettings.contains(event.target) && !document.getElementById("toggleDeveloperSettings").contains(event.target)) {
                popupDeveloperSettings.style.display = "none"; // Đóng pop-up Cài Đặt Nhà Phát Triển
            }
        });

        function clearForm() {
            // Tải lại trang hiện tại
            window.location.reload();
        };

        document.addEventListener("DOMContentLoaded", function () {
            // Lấy các phần tử DOM cần thiết
            const previewImage = document.getElementById("previewImage");
            const uploadAvatar = document.getElementById("uploadAvatar");
            const rotateLeft = document.getElementById("rotateLeft");
            const flipHorizontal = document.getElementById("flipHorizontal");
            const flipVertical = document.getElementById("flipVertical");
            const rotateRight = document.getElementById("rotateRight");
            const saveAvatar = document.getElementById("saveAvatar");
            const changeAvatarButton = document.getElementById("changeAvatarButton");
            const modalElement = document.getElementById("changeAvatarModal");

            let currentRotation = 0; // Biến lưu trữ góc xoay hiện tại
            let flipX = 1; // Biến lưu trữ trạng thái lật ngang
            let flipY = 1; // Biến lưu trữ trạng thái lật dọc

            // Mở modal khi nhấn nút Change Image
            changeAvatarButton.addEventListener("click", function () {
                const myModal = new bootstrap.Modal(modalElement);
                myModal.show();
            });

            // Reset modal khi đóng
            modalElement.addEventListener('hidden.bs.modal', function () {
                previewImage.src = ''; // Xóa ảnh preview
                saveAvatar.disabled = true; // Vô hiệu hóa nút Lưu ảnh
                currentRotation = 0; // Reset góc xoay
                flipX = 1; // Reset lật ngang
                flipY = 1; // Reset lật dọc
                updateImageTransform(); // Cập nhật transform của ảnh
            });

            // Khi người dùng chọn file, hiển thị ảnh preview
            uploadAvatar.addEventListener("change", function (event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        previewImage.src = e.target.result; // Hiển thị ảnh preview
                        saveAvatar.disabled = false; // Kích hoạt nút Lưu ảnh
                    };
                    reader.readAsDataURL(file);
                } else {
                    previewImage.src = ""; // Xóa ảnh preview nếu không có file
                    saveAvatar.disabled = true; // Vô hiệu hóa nút Lưu ảnh
                }
            });

            // Khi click vào ảnh, mở hộp thoại chọn ảnh
            previewImage.addEventListener("click", function () {
                uploadAvatar.click();
            });

            // Hàm để xoay ảnh
            function rotateImage(degrees) {
                currentRotation += degrees;
                updateImageTransform();
            }

            // Hàm để cập nhật transform của ảnh sau mỗi thao tác
            function updateImageTransform() {
                previewImage.style.transform = `rotate(${currentRotation}deg) scaleX(${flipX}) scaleY(${flipY})`;
            }

            // Xoay ảnh sang trái (90 độ)
            rotateLeft.addEventListener("click", function () {
                rotateImage(-90);
            });

            // Xoay ảnh sang phải (90 độ)
            rotateRight.addEventListener("click", function () {
                rotateImage(90);
            });

            // Lật ảnh ngang
            flipHorizontal.addEventListener("click", function () {
                flipX = -flipX; // Đảo giá trị lật ngang
                updateImageTransform();
            });

            // Lật ảnh dọc
            flipVertical.addEventListener("click", function () {
                flipY = -flipY; // Đảo giá trị lật dọc
                updateImageTransform();
            });

            // Hàm chuyển đổi file sang Base64
            function toBase64(file) {
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.onload = () => resolve(reader.result);
                    reader.onerror = (error) => reject(error);
                    reader.readAsDataURL(file);
                });
            }

            // Hàm áp dụng các thay đổi (xoay/lật) lên ảnh và trả về Base64
            function applyTransformations() {
                const canvas = document.createElement("canvas");
                const ctx = canvas.getContext("2d");
                const img = new Image();

                img.src = previewImage.src;

                return new Promise((resolve) => {
                    img.onload = () => {
                        // Điều chỉnh kích thước canvas
                        canvas.width = img.width;
                        canvas.height = img.height;

                        // Di chuyển context để xử lý xoay/lật
                        ctx.translate(canvas.width / 2, canvas.height / 2);
                        ctx.rotate((currentRotation * Math.PI) / 180);
                        ctx.scale(flipX, flipY);

                        // Vẽ lại ảnh lên canvas
                        ctx.drawImage(
                            img,
                            -img.width / 2,
                            -img.height / 2,
                            img.width,
                            img.height
                        );

                        // Trả về ảnh đã chỉnh sửa dưới dạng Base64
                        resolve(canvas.toDataURL("image/jpeg"));
                    };
                });
            }

            // Hàm gọi API để update ảnh
            async function updateProfileImage() {
                const file = uploadAvatar.files[0]; // Lấy file đã chọn
                if (!file) {
                    console.error("Please select an image before saving.");
                    return;
                }

                try {
                    // Áp dụng các thay đổi (xoay/lật) lên ảnh và lấy Base64
                    const base64Image = await applyTransformations();

                    // Lấy UserId từ Razor hoặc backend
                    const userId = '@(User.FindFirst("sub")?.Value)';

                    if (!userId) {
                        console.error("User ID is missing. Please log in again.");
                        return;
                    }

                    // Chuẩn bị dữ liệu để gửi đến API
                    const updateProfileImageDto = {
                        UserId: userId,
                        FileName: file.name,
                        Base64Image: base64Image.split(",")[1], // Loại bỏ tiền tố Base64
                        ContentType: "image/jpeg" // MIME type của ảnh
                    };

                    // Gửi API qua fetch
                    const response = await fetch("https://localhost:6005/users/updateimage", {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json",
                            // "Authorization": `Bearer YOUR_ACCESS_TOKEN` // Thêm Authorization nếu cần
                        },
                        body: JSON.stringify(updateProfileImageDto)
                    });

                    if (response.ok) {
                        const result = await response.text();
                        console.log(`Profile image updated successfully: ${result}`);

                        // Load lại trang sau khi cập nhật thành công
                        location.reload();
                    } else {
                        const error = await response.text();
                        console.error(`Failed to update profile image: ${error}`);
                    }
                } catch (err) {
                    console.error("Error calling API:", err);
                }
            }

            // Lắng nghe sự kiện click trên nút Save để gọi API
            saveAvatar.addEventListener("click", function () {
                updateProfileImage();
            });
        });


    </script>
</body>
</html>
